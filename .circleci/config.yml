version: 2.1
orbs:
  codecov: codecov/codecov@3.2.4

jobs:
  build:
    docker:
      - image: cimg/openjdk:15.0.2
    steps:  
      - checkout
      - restore_cache:
          key: v1-gradle-wrapper-{{ checksum "gradle/wrapper/gradle-wrapper.properties" }}
      - restore_cache:
          key: v1-gradle-cache-{{ checksum "build.gradle" }}
      - run:
          name: Install dependencies
          command: ./gradlew build -x test
      - save_cache:
          paths:
            - ~/.gradle/wrapper
          key: v1-gradle-wrapper-{{ checksum "gradle/wrapper/gradle-wrapper.properties" }}
      - save_cache:
          paths:
            - ~/.gradle/caches
          key: v1-gradle-cache-{{ checksum "build.gradle" }}
      - persist_to_workspace:
          root: .
          paths:
            - build
      
  test:
    parallelism: 4
    environment:
      _JAVA_OPTIONS: "-Xmx2g"
      GRADLE_OPTS: "-Dorg.gradle.daemon=false -Dorg.gradle.workers.max=2"
    docker:
      - image: cimg/openjdk:15.0.2
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run:
          name: Run tests in parallel
          command: |
            cd src/test/java
            # Get list of classnames of tests that should run on this node
            CLASSNAMES=$(circleci tests glob "**/*.java" \
              | cut -c 1- | sed 's@/@.@g' \
              | sed 's/.\{5\}$//' \
              | circleci tests split --split-by=timings --timings-type=classname)
            cd ../../..
            # Format the arguments to "./gradlew test"
            GRADLE_ARGS=$(echo $CLASSNAMES | awk '{for (i=1; i<=NF; i++) print "--tests",$i}')
            echo "Prepared arguments for Gradle: $GRADLE_ARGS"
            ./gradlew test -i $GRADLE_ARGS
            ./gradlew jacocoTestReport
      - codecov/upload:
          file: build/reports/jacoco/test/jacocoTestReport.xml
          token: CODECOV_TOKEN
  
workflows:
  version: 2.1
  workflow:
    jobs:
    - build
    - test:
        requires:
          - build